from google.colab import drive import zipfile
import os import shutil import random import math
import matplotlib.pyplot as plt import cv2
import numpy as np
from skimage.feature import hog from collections import Counter

# Mount Google Drive drive.mount('/content/drive')

# Path to the zip file in Google Drive
zip_file_path = '/content/drive/My Drive/kagglecatsanddogs_5340 (2).zip'

# Destination directory to extract the zip file extract_dir = '/content/dataset'

# Create the destination directory if it doesn't exist os.makedirs(extract_dir, exist_ok=True)

# Extract the zip file
with zipfile.ZipFile(zip_file_path, 'r') as zip_ref: zip_ref.extractall(extract_dir)

# Path to the extracted "PetImages" directory pet_images_dir = os.path.join(extract_dir, 'PetImages')

# Create separate directories for cats and dogs cats_dir = os.path.join(extract_dir, 'cats') dogs_dir = os.path.join(extract_dir, 'dogs') os.makedirs(cats_dir, exist_ok=True) os.makedirs(dogs_dir, exist_ok=True)

# Move cat images to the cats directory and dog images to the dogs directory for root, dirs, files in os.walk(pet_images_dir):
for file in files:
if file.endswith('.jpg'):
if 'Cat' in root:
shutil.move(os.path.join(root, file), os.path.join(cats_dir, file)) elif 'Dog' in root:
shutil.move(os.path.join(root, file), os.path.join(dogs_dir, file))

# List the number of cat and dog images num_cats = len(os.listdir(cats_dir)) num_dogs = len(os.listdir(dogs_dir))

print(f"Number of cat images: {num_cats}") print(f"Number of dog images: {num_dogs}")

# Define the percentage split train_percentage = 0.8
Test percentage = 0.2
# Function to split images into train and test sets
def split_data(src, train_dest, test_dest, train_percentage):
# Create directories if they don't exist os.makedirs(train_dest, exist_ok=True) os.makedirs(test_dest, exist_ok=True)

# Get list of image files files = os.listdir(src) random.shuffle(files)

# Calculate split indices
split_index = math.floor(len(files) * train_percentage)

# Split files into train and test sets train_files = files[:split_index] test_files = files[split_index:]

# Move files to train directory for file in train_files:
shutil.move(os.path.join(src, file), os.path.join(train_dest, file))

# Move files to test directory for file in test_files:
shutil.move(os.path.join(src, file), os.path.join(test_dest, file))

# Split cat images into train and test sets
split_data(cats_dir, os.path.join(extract_dir, 'cats_train'), os.path.join(extract_dir, 'cats_test'), train_percentage)

# Split dog images into train and test sets
split_data(dogs_dir, os.path.join(extract_dir, 'dogs_train'), os.path.join(extract_dir, 'dogs_test'), train_percentage)

# Function to load and display sample images with train and test splits def display_sample_images_with_split(train_dir, test_dir, label):
# Create subplots
fig, axes = plt.subplots(2, 5, figsize=(15, 6)) fig.suptitle(f"Sample {label} Images", fontsize=16)

# Load and display sample images from the training directory for i, ax in enumerate(axes[0]):
# Load the image
train_files = os.listdir(train_dir)
img_path = os.path.join(train_dir, train_files[i]) img = cv2.imread(img_path)
img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)

# Display the image ax.imshow(img) ax.axis('off')

# Load and display sample images from the testing directory for i, ax in enumerate(axes[1]):
# Load the image
test_files = os.listdir(test_dir)
img_path = os.path.join(test_dir, test_files[i]) img = cv2.imread(img_path)
